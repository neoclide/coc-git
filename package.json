{
  "name": "coc-git",
  "version": "2.5.4",
  "description": "Git extension for coc.nvim",
  "main": "lib/index.js",
  "publisher": "chemzqm",
  "keywords": [
    "coc.nvim",
    "git"
  ],
  "engines": {
    "coc": "^0.0.80"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/neoclide/coc-git.git"
  },
  "scripts": {
    "prepare": "node esbuild.js"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "commands": [
      {
        "title": "Refresh git information for all buffers.",
        "command": "git.refresh"
      },
      {
        "title": "Show chunk info under cursor",
        "command": "git.chunkInfo"
      },
      {
        "title": "Stage current chunk.",
        "command": "git.chunkStage"
      },
      {
        "title": "Unstage chunk that contains current line",
        "command": "git.chunkUnstage"
      },
      {
        "title": "Undo current chunk.",
        "command": "git.chunkUndo"
      },
      {
        "title": "Show commit of current chunk.",
        "command": "git.showCommit"
      },
      {
        "title": "Open current line in browser, github url supported.",
        "command": "git.browserOpen"
      },
      {
        "title": "Copy url of current line to clipboard, github url supported.",
        "command": "git.copyUrl"
      },
      {
        "title": "Copy permalink of current line to clipboard, github url supported.",
        "command": "git.copyPermalink"
      },
      {
        "title": "Show cached diff in preview window.",
        "command": "git.diffCached"
      },
      {
        "title": "Fold unchanged lines of current buffer.",
        "command": "git.foldUnchanged"
      },
      {
        "title": "Toggle git gutters in sign column.",
        "command": "git.toggleGutters"
      },
      {
        "title": "Push code of current branch to remote",
        "command": "git.push"
      },
      {
        "title": "Show git blame info in float or popup window",
        "command": "git.showBlameDoc"
      }
    ],
    "configuration": {
      "type": "object",
      "properties": {
        "git.command": {
          "type": "string",
          "default": "git",
          "description": "Command for git, could be absolute path of git executable."
        },
        "git.remoteName": {
          "type": "string",
          "default": "origin",
          "description": "Remote name for fetch github issues."
        },
        "git.browserRemoteName": {
          "type": "string",
          "default": "",
          "description": "Remote name for browserOpen and copyUrl."
        },
        "git.browserBranchName": {
          "type": "string",
          "default": "",
          "description": "Branch name for browserOpen and copyUrl."
        },
        "git.urlFix": {
          "type": "object",
          "default": {},
          "examples": [
            {
              "gitlab.org": [
                "blob|-/blob",
                "blob|-/blob"
              ],
              "gitea.com": [
                "blob|src/branch",
                "blob|src/commit"
              ],
              "gerrit.with.gitiles": [
                "(.*)/a/(.*)/blob/(.*)#L(.*)|$1/plugins/gitiles/$2/+/refs/heads/$3#$4",
                "(.*)/a/(.*)/blob/(.*)#L(.*)|$1/plugins/gitiles/$2/+/$3#$4"
              ]
            }
          ],
          "format": "{\"git-service-1's domain\":[\"fix-for-normal-url\",\"fix-for-permalink\"],\"git-service-2's domain\":...}",
          "description": "A fix is a string, like \"pattern|replacement\" show in examples sessions, use to transform github style url to whatever you like. copyUrl will run url.replace(pattern,replacement) after generate a github style url. Example configuration make browserOpen and copyUrl work with gitlab, gitea and gerrit with gitiles."
        },
        "git.diffRevision": {
          "type": "string",
          "default": "",
          "description": "Revision used for git diff used by gutters, default is current HEAD."
        },
        "git.issueFormat": {
          "type": "string",
          "default": "#%i",
          "description": "Formatting string for issue completion. Supported interpolation variables: %i - issue id. %r - repository name. %o - organization/owner name. %t - issue title. %b - issue body. %c - issue created at. %a - issue author. %u - issue url."
        },
        "git.virtualTextPrefix": {
          "type": "string",
          "default": "     ",
          "description": "Prefix of git blame infomation to virtual text, require virtual text feature of neovim."
        },
        "git.addGBlameToVirtualText": {
          "type": "boolean",
          "default": false,
          "description": "Add git blame information to virtual text, require virtual text feature of neovim."
        },
        "git.addGBlameToBufferVar": {
          "type": "boolean",
          "default": false,
          "description": "Add git blame information to b:coc_git_blame."
        },
        "git.blameUseRealTime": {
          "type": "boolean",
          "default": false,
          "description": "use real time in git blame info"
        },
        "git.branchCharacter": {
          "type": "string",
          "default": "",
          "description": "Branch character used with g:coc_git_status"
        },
        "git.changedDecorator": {
          "type": "string",
          "default": "*",
          "description": "Git changed decorator used with g:coc_git_status"
        },
        "git.conflictedDecorator": {
          "type": "string",
          "default": "x",
          "description": "Git conflicted decorator used with g:coc_git_status"
        },
        "git.stagedDecorator": {
          "type": "string",
          "default": "●",
          "description": "Git staged decorator used with g:coc_git_status"
        },
        "git.untrackedDecorator": {
          "type": "string",
          "default": "…",
          "description": "Git untracked decorator used with g:coc_git_status"
        },
        "git.enableGlobalStatus": {
          "type": "boolean",
          "default": true,
          "description": "Enable global g:coc_git_status."
        },
        "git.enableGutters": {
          "type": "boolean",
          "default": true,
          "description": "Enable gutters in sign column."
        },
        "git.realtimeGutters": {
          "type": "boolean",
          "default": true,
          "description": "Update gutters in realtime, default: true."
        },
        "git.signPriority": {
          "type": "number",
          "default": 10,
          "description": "Priority of sign gutters, default to 10."
        },
        "git.pushArguments": {
          "type": [
            "array",
            "null"
          ],
          "default": null,
          "description": "Default arguments used for git.pushCode command, ex: [\"--force-with-lease\"]",
          "items": {
            "type": "string"
          }
        },
        "git.changedSign.text": {
          "type": "string",
          "default": "~",
          "description": "Text of changed sign."
        },
        "git.changedSign.hlGroup": {
          "type": "string",
          "default": "DiffChange",
          "description": "Highlight group for changed sign."
        },
        "git.addedSign.text": {
          "type": "string",
          "default": "+",
          "description": "Text of added sign."
        },
        "git.addedSign.hlGroup": {
          "type": "string",
          "default": "DiffAdd",
          "description": "Highlight group for added sign."
        },
        "git.removedSign.text": {
          "type": "string",
          "default": "_",
          "description": "Text of removed sign."
        },
        "git.removedSign.hlGroup": {
          "type": "string",
          "default": "DiffDelete",
          "description": "Highlight group for removed sign."
        },
        "git.topRemovedSign.text": {
          "type": "string",
          "default": "‾",
          "description": "Text of top removed sign."
        },
        "git.topRemovedSign.hlGroup": {
          "type": "string",
          "default": "DiffDelete",
          "description": "Highlight group for top removed sign."
        },
        "git.changeRemovedSign.text": {
          "type": "string",
          "default": "≃",
          "description": "Text of change removed sign."
        },
        "git.changeRemovedSign.hlGroup": {
          "type": "string",
          "default": "DiffChange",
          "description": "Highlight group for change removed sign."
        },
        "git.semanticCommit.filetypes": {
          "type": [
            "array",
            "null"
          ],
          "default": [
            "gitcommit",
            "gina-commit"
          ],
          "description": "Enabled filetypes",
          "items": {
            "type": "string"
          }
        },
        "git.semanticCommit.scope": {
          "type": "boolean",
          "default": true,
          "description": "Commit message with scope field"
        },
        "git.splitWindowCommand": {
          "type": "string",
          "default": "above sp",
          "description": "Command used when split new window for show commit."
        },
        "git.showCommitInFloating": {
          "type": "boolean",
          "default": false,
          "description": "Show commit in floating or popup window"
        },
        "git.floatConfig": {
          "type": "object",
          "description": "Configure style of float window/popup, extends from floatFactory.floatConfig",
          "additionalProperties": false,
          "properties": {
            "border": {
              "type": "boolean",
              "default": false,
              "description": "Set to true to use borders."
            },
            "rounded": {
              "type": "boolean",
              "default": false,
              "description": "Use rounded borders when border is true."
            },
            "highlight": {
              "type": "string",
              "default": "CocFloating",
              "description": "Background highlight group of float window."
            },
            "title": {
              "type": "string",
              "default": "",
              "description": "Title used by float window."
            },
            "borderhighlight": {
              "type": "string",
              "default": "CocFloating",
              "description": "Border highlight group of float window."
            },
            "close": {
              "type": "boolean",
              "default": false,
              "description": "Set to true to draw close icon"
            },
            "maxWidth": {
              "type": "integer",
              "description": "Maximum width of float window, include border."
            },
            "maxHeight": {
              "type": "integer",
              "minimum": 2,
              "description": "Maximum height of float window, include border."
            },
            "focusable": {
              "type": "boolean",
              "default": true,
              "description": "Enable focus by user actions (wincmds, mouse events), neovim only."
            },
            "shadow": {
              "type": "boolean",
              "default": false,
              "description": "Drop shadow effect by blending with the background, neovim only."
            },
            "winblend": {
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 100,
              "description": "Enables pseudo-transparency by set 'winblend' option of window, neovim only."
            }
          }
        },
        "git.gitlab.hosts": {
          "type": "array",
          "default": [
            "gitlab.com"
          ],
          "description": "Custom GitLab hosts"
        },
        "git.conflict.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable highlight conflict lines."
        },
        "git.conflict.current.hlGroup": {
          "type": "string",
          "default": "DiffChange",
          "description": "Highlight group for the current version of a merge conflict."
        },
        "git.conflict.incoming.hlGroup": {
          "type": "string",
          "default": "DiffAdd",
          "description": "Highlight group for the incoming version of a merge conflict."
        },
        "git.gstatus.saveBeforeOpen": {
          "type": "boolean",
          "default": "false",
          "description": "Auto save opened files before open list."
        },
        "coc.source.issues.enable": {
          "type": "boolean",
          "default": true
        },
        "coc.source.issues.triggerCharacters": {
          "type": "array",
          "default": [
            "#"
          ],
          "items": {
            "type": "string"
          }
        },
        "coc.source.issues.priority": {
          "type": "integer",
          "default": 99
        },
        "coc.source.issues.shortcut": {
          "type": "string",
          "default": "[I]"
        },
        "coc.source.issues.filetypes": {
          "type": [
            "array",
            "null"
          ],
          "default": [
            "gitcommit",
            "gina-commit"
          ],
          "description": "Enabled filetypes",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "author": "chemzqm@gmail.com",
  "license": "MIT",
  "devDependencies": {
    "@chemzqm/tsconfig": "^0.0.3",
    "@types/colors": "^1.2.1",
    "@types/debounce": "^1.2.0",
    "@types/node": "^12.12.0",
    "@types/uuid": "^7.0.1",
    "@types/which": "^1.3.2",
    "coc.nvim": "^0.0.83-next.2",
    "colors": "^1.4.0",
    "debounce": "^1.2.0",
    "esbuild": "^0.8.29",
    "iconv-lite": "^0.6.2",
    "rimraf": "^3.0.2",
    "semver": "^7.3.5",
    "timeago.js": "^4.0.2",
    "typescript": "^4.5.4",
    "uuid": "^7.0.1",
    "which": "^2.0.2"
  },
  "dependencies": {}
}
